--------------------
./configure --host=arm-linux --build=x86_64-linux-gnu --prefix=/home/bmuessig/Pandora/target CC=armarmv5te-unknown-linux-gnueabi-gcc
Do 16. Feb 22:25:12 CET 2017
unknown option: --host=arm-linux
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure --help
Do 16. Feb 22:25:19 CET 2017
usage:
  configure [--const] [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure --help
Do 16. Feb 22:27:28 CET 2017
usage:
  configure [--const] [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static --libdir=/home/bmuessig/Pandora/target/lib --includedir=/home/bmuessig/Pandora/target/usr/include --archs=-arch arm
Do 16. Feb 22:29:40 CET 2017
Checking for gcc...
=== ztest13808.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13808.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13808.c ===
int foo() { return 0; }
===
gcc -c -O3 -arch arm ztest13808.c
gcc: error: arm: Datei oder Verzeichnis nicht gefunden
gcc: error: unrecognized command line option ‘-arch’
(exit code 1)
Compiler error reporting is too harsh for ./configure (perhaps remove -Werror).
** ./configure aborting.
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static --libdir=/home/bmuessig/Pandora/target/lib --includedir=/home/bmuessig/Pandora/target/usr/include --archs=-arch arm CC=armarmv5te-unknown-linux-gnueabi-gcc
Do 16. Feb 22:30:05 CET 2017
unknown option: CC=armarmv5te-unknown-linux-gnueabi-gcc
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static --libdir=/home/bmuessig/Pandora/target/lib --includedir=/home/bmuessig/Pandora/target/usr/include --archs=-arch armarmv5te-unknown-linux-gnueabi-gcc
Do 16. Feb 22:30:21 CET 2017
Checking for gcc...
=== ztest13921.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13921.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13921.c ===
int foo() { return 0; }
===
gcc -c -O3 -arch armarmv5te-unknown-linux-gnueabi-gcc ztest13921.c
gcc: error: armarmv5te-unknown-linux-gnueabi-gcc: Datei oder Verzeichnis nicht gefunden
gcc: error: unrecognized command line option ‘-arch’
(exit code 1)
Compiler error reporting is too harsh for ./configure (perhaps remove -Werror).
** ./configure aborting.
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static --libdir=/home/bmuessig/Pandora/target/lib --includedir=/home/bmuessig/Pandora/target/usr/include --archs=-arch arm CHOST=armarmv5te-unknown-linux-gnueabi
Do 16. Feb 22:31:28 CET 2017
unknown option: CHOST=armarmv5te-unknown-linux-gnueabi
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target
Do 16. Feb 22:36:55 CET 2017
=== ztest14243.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest14243.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14243.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest14243.c

Checking for shared library support...
=== ztest14243.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -w -c -O3 -fPIC ztest14243.c
armarmv5te-unknown-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest14243.so ztest14243.o
Building shared library libz.so.1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest14243.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest14243.c
Checking for size_t... Yes.


=== ztest14243.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14243.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14243.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14243 ztest14243.c
Checking for strerror... Yes.

=== ztest14243.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14243.c
Checking for unistd.h... Yes.

=== ztest14243.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14243.c
Checking for stdarg.h... Yes.

=== ztest14243.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14243.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14243.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14243 ztest14243.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14243.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14243.c
Checking for return value of vsnprintf()... Yes.

=== ztest14243.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14243.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 22:49:21 CET 2017
=== ztest15918.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest15918.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest15918.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest15918.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest15918.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest15918.c
Checking for size_t... Yes.


=== ztest15918.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15918.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest15918.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15918 ztest15918.c
Checking for strerror... Yes.

=== ztest15918.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15918.c
Checking for unistd.h... Yes.

=== ztest15918.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15918.c
Checking for stdarg.h... Yes.

=== ztest15918.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15918.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest15918.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15918 ztest15918.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest15918.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15918.c
Checking for return value of vsnprintf()... Yes.

=== ztest15918.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15918.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 22:49:46 CET 2017
=== ztest16153.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest16153.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest16153.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest16153.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest16153.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest16153.c
Checking for size_t... Yes.


=== ztest16153.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16153.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest16153.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16153 ztest16153.c
Checking for strerror... Yes.

=== ztest16153.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16153.c
Checking for unistd.h... Yes.

=== ztest16153.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16153.c
Checking for stdarg.h... Yes.

=== ztest16153.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16153.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest16153.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16153 ztest16153.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest16153.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16153.c
Checking for return value of vsnprintf()... Yes.

=== ztest16153.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16153.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 22:50:47 CET 2017
=== ztest17457.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest17457.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17457.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest17457.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest17457.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest17457.c
Checking for size_t... Yes.


=== ztest17457.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17457.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17457.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17457 ztest17457.c
Checking for strerror... Yes.

=== ztest17457.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17457.c
Checking for unistd.h... Yes.

=== ztest17457.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17457.c
Checking for stdarg.h... Yes.

=== ztest17457.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17457.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17457.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17457 ztest17457.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17457.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17457.c
Checking for return value of vsnprintf()... Yes.

=== ztest17457.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17457.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 23:06:44 CET 2017
=== ztest19334.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest19334.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19334.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest19334.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest19334.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest19334.c
Checking for size_t... Yes.


=== ztest19334.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19334.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19334.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19334 ztest19334.c
Checking for strerror... Yes.

=== ztest19334.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19334.c
Checking for unistd.h... Yes.

=== ztest19334.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19334.c
Checking for stdarg.h... Yes.

=== ztest19334.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19334.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19334.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19334 ztest19334.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19334.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19334.c
Checking for return value of vsnprintf()... Yes.

=== ztest19334.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19334.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 23:09:31 CET 2017
=== ztest19767.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest19767.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19767.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest19767.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest19767.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest19767.c
Checking for size_t... Yes.


=== ztest19767.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19767.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19767 ztest19767.c
Checking for strerror... Yes.

=== ztest19767.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for unistd.h... Yes.

=== ztest19767.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for stdarg.h... Yes.

=== ztest19767.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19767.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19767 ztest19767.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19767.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for return value of vsnprintf()... Yes.

=== ztest19767.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19767.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 23:09:58 CET 2017
=== ztest21783.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest21783.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21783.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest21783.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest21783.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest21783.c
Checking for size_t... Yes.


=== ztest21783.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21783.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21783.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21783 ztest21783.c
Checking for strerror... Yes.

=== ztest21783.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21783.c
Checking for unistd.h... Yes.

=== ztest21783.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21783.c
Checking for stdarg.h... Yes.

=== ztest21783.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21783.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21783.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21783 ztest21783.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21783.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21783.c
Checking for return value of vsnprintf()... Yes.

=== ztest21783.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21783.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 23:10:18 CET 2017
=== ztest23731.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest23731.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23731.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest23731.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest23731.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest23731.c
Checking for size_t... Yes.


=== ztest23731.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23731.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23731.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23731 ztest23731.c
Checking for strerror... Yes.

=== ztest23731.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23731.c
Checking for unistd.h... Yes.

=== ztest23731.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23731.c
Checking for stdarg.h... Yes.

=== ztest23731.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23731.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23731.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23731 ztest23731.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23731.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23731.c
Checking for return value of vsnprintf()... Yes.

=== ztest23731.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23731.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 23:16:22 CET 2017
=== ztest25983.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest25983.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25983.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest25983.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest25983.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest25983.c
Checking for size_t... Yes.


=== ztest25983.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25983.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25983.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25983 ztest25983.c
Checking for strerror... Yes.

=== ztest25983.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25983.c
Checking for unistd.h... Yes.

=== ztest25983.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25983.c
Checking for stdarg.h... Yes.

=== ztest25983.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25983.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25983.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25983 ztest25983.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25983.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25983.c
Checking for return value of vsnprintf()... Yes.

=== ztest25983.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25983.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 23:16:51 CET 2017
=== ztest26227.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest26227.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26227.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest26227.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest26227.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest26227.c
Checking for size_t... Yes.


=== ztest26227.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26227.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26227.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26227 ztest26227.c
Checking for strerror... Yes.

=== ztest26227.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26227.c
Checking for unistd.h... Yes.

=== ztest26227.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26227.c
Checking for stdarg.h... Yes.

=== ztest26227.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26227.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26227.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26227 ztest26227.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26227.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26227.c
Checking for return value of vsnprintf()... Yes.

=== ztest26227.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26227.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 23:17:50 CET 2017
=== ztest28261.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest28261.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28261.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest28261.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest28261.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest28261.c
Checking for size_t... Yes.


=== ztest28261.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28261.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28261.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28261 ztest28261.c
Checking for strerror... Yes.

=== ztest28261.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28261.c
Checking for unistd.h... Yes.

=== ztest28261.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28261.c
Checking for stdarg.h... Yes.

=== ztest28261.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28261.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28261.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28261 ztest28261.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28261.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28261.c
Checking for return value of vsnprintf()... Yes.

=== ztest28261.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28261.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 23:27:40 CET 2017
=== ztest32506.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest32506.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32506.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest32506.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest32506.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest32506.c
Checking for size_t... Yes.


=== ztest32506.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32506.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32506.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32506 ztest32506.c
Checking for strerror... Yes.

=== ztest32506.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32506.c
Checking for unistd.h... Yes.

=== ztest32506.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32506.c
Checking for stdarg.h... Yes.

=== ztest32506.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32506.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32506.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32506 ztest32506.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32506.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32506.c
Checking for return value of vsnprintf()... Yes.

=== ztest32506.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32506.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Do 16. Feb 23:35:14 CET 2017
=== ztest4292.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest4292.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4292.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest4292.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest4292.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest4292.c
Checking for size_t... Yes.


=== ztest4292.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4292.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4292.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4292 ztest4292.c
Checking for strerror... Yes.

=== ztest4292.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4292.c
Checking for unistd.h... Yes.

=== ztest4292.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4292.c
Checking for stdarg.h... Yes.

=== ztest4292.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4292.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4292.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4292 ztest4292.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4292.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4292.c
Checking for return value of vsnprintf()... Yes.

=== ztest4292.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4292.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Fr 17. Feb 00:42:42 CET 2017
=== ztest14196.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest14196.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14196.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest14196.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest14196.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest14196.c
Checking for size_t... Yes.


=== ztest14196.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14196.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14196.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14196 ztest14196.c
Checking for strerror... Yes.

=== ztest14196.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14196.c
Checking for unistd.h... Yes.

=== ztest14196.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14196.c
Checking for stdarg.h... Yes.

=== ztest14196.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14196.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14196.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14196 ztest14196.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14196.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14196.c
Checking for return value of vsnprintf()... Yes.

=== ztest14196.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14196.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Fr 17. Feb 16:55:08 CET 2017
=== ztest13616.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest13616.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13616.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest13616.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest13616.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest13616.c
Checking for size_t... Yes.


=== ztest13616.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13616.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13616.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13616 ztest13616.c
Checking for strerror... Yes.

=== ztest13616.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13616.c
Checking for unistd.h... Yes.

=== ztest13616.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13616.c
Checking for stdarg.h... Yes.

=== ztest13616.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13616.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13616.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13616 ztest13616.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13616.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13616.c
Checking for return value of vsnprintf()... Yes.

=== ztest13616.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13616.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = armarmv5te-unknown-linux-gnueabi-ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = armarmv5te-unknown-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/bmuessig/Pandora/target --static
Sa 18. Feb 14:28:22 CET 2017
=== ztest27547.c ===
extern int getchar();
int hello() {return getchar();}
===
armarmv5te-unknown-linux-gnueabi-gcc -c ztest27547.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27547.c ===
int foo() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest27547.c

Building static library libz.a version 1.2.11 with armarmv5te-unknown-linux-gnueabi-gcc.

=== ztest27547.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 ztest27547.c
Checking for size_t... Yes.


=== ztest27547.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27547.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27547.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27547 ztest27547.c
Checking for strerror... Yes.

=== ztest27547.c ===
#include <unistd.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27547.c
Checking for unistd.h... Yes.

=== ztest27547.c ===
#include <stdarg.h>
int main() { return 0; }
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27547.c
Checking for stdarg.h... Yes.

=== ztest27547.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27547.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27547.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27547 ztest27547.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27547.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27547.c
Checking for return value of vsnprintf()... Yes.

=== ztest27547.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
armarmv5te-unknown-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27547.c
Checking for attribute(visibility) support... Yes.

ALL = static all64
AR = armarmv5te-unknown-linux-gnueabi-ar
ARFLAGS = rc
CC = armarmv5te-unknown-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = armarmv5te-unknown-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = armarmv5te-unknown-linux-gnueabi-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = armarmv5te-unknown-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/bmuessig/Pandora/target
sharedlibdir = ${libdir}
uname = Linux
--------------------


